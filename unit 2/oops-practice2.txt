1. Define a Dart class named Vehicle with properties make and model. Extend the Vehicle class to create two subclasses: Car and Truck. Further extend the Car class to create a subclass SportsCar. Implement constructors for each subclass to initialize their properties. The SportsCar class should have an additional property topSpeed.

2. Create a Dart class named Product with properties name, price, and quantity. Define an interface named ElectronicDevice with methods turnOn and turnOff. Extend the Product class to create two subclasses: Television and Laptop. Implement the ElectronicDevice interface in both subclasses. The Television class should have an additional property screenSize, and the Laptop class should have an additional property batteryLife. Implement constructors for each class to initialize their properties.

3. Design a Dart interface named BankAccount with methods deposit, withdraw, and getBalance. Create a Dart class named Customer with properties name and address. Extend the Customer class to create two subclasses: SavingsAccount and CheckingAccount. Implement the BankAccount interface in both subclasses. The SavingsAccount class should have an additional method calculateInterest and a property interestRate. The CheckingAccount class should have an additional method deductFee and a property transactionFee. Implement constructors for each class to initialize their properties.

4. Create an abstract Dart class named Shape with abstract methods calculateArea and calculatePerimeter. Implement two interfaces: Drawable with method drawShape and Identifiable with method getShapeId. Define two subclasses of Shape: Circle and Rectangle. Override the abstract methods in each subclass to calculate the area and perimeter specific to each shape. Implement the Drawable interface in both subclasses to draw the respective shapes. Implement the Identifiable interface in both subclasses to generate and retrieve unique shape IDs.