1. Write a Dart function named fetchData that simulates fetching data from a remote server asynchronously using a Future. The function should return a Future that resolves to a list of integers. Inside the function, use the Future.delayed constructor to simulate a network delay of 2 seconds, and then return a Future that resolves to a list of integers.

2. Write a Dart function named fetchUserData that simulates fetching user data from a remote server asynchronously using a Future. The function should take a user ID as a parameter and return a Future that resolves to a Map representing the user's data (e.g., name, age, email). Inside the function, use the Future.delayed constructor to simulate a network delay of 3 seconds, and then return a Future that resolves to a Map containing dummy user data.

3. Write a Dart function named fetchDataWithRetry that fetches data from a remote server asynchronously using a Future with error handling and retry mechanism. The function should take a URL as a parameter and return a Future that resolves to the fetched data. Inside the function, use a loop to retry the network request up to 3 times in case of a network error or timeout. Use Future.delayed to add a delay of 2 seconds between retries. If the maximum number of retries is reached without success, throw a custom NetworkException indicating the failure.